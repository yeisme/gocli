{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/yeisme/gocli/pkg/configs/config",
  "$ref": "#/$defs/Config",
  "$defs": {
    "AppConfig": {
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Application display name"
        },
        "debug": {
          "type": "boolean",
          "title": "Debug",
          "description": "Enable debug mode (more verbose internal logging)"
        },
        "verbose": {
          "type": "boolean",
          "title": "Verbose",
          "description": "Enable verbose output for commands"
        },
        "quiet": {
          "type": "boolean",
          "title": "Quiet",
          "description": "Suppress non-error output"
        },
        "hotload": {
          "$ref": "#/$defs/HotloadConfig",
          "title": "Hotload",
          "description": "File watching / hot reload settings"
        }
      },
      "type": "object"
    },
    "Config": {
      "properties": {
        "version": {
          "type": "integer",
          "minimum": 1,
          "title": "Version",
          "description": "Configuration file version"
        },
        "log": {
          "$ref": "#/$defs/LogConfig",
          "title": "Log",
          "description": "Logging related settings"
        },
        "env": {
          "$ref": "#/$defs/EnvConfig",
          "title": "Env",
          "description": "Go related environment variables (auto-detected + overrides)"
        },
        "app": {
          "$ref": "#/$defs/AppConfig",
          "title": "App",
          "description": "General application behavior flags"
        },
        "tools": {
          "$ref": "#/$defs/ToolsConfig",
          "title": "Tools",
          "description": "Project and global tool installation configuration"
        },
        "plugin": {
          "$ref": "#/$defs/PluginConfig",
          "title": "Plugin",
          "description": "Plugin loading and search path configuration"
        },
        "doc": {
          "$ref": "#/$defs/Options",
          "title": "Doc",
          "description": "Documentation generation options"
        },
        "init": {
          "$ref": "#/$defs/InitOptions",
          "title": "Init",
          "description": "Project initialization template settings"
        }
      },
      "type": "object",
      "required": [
        "version"
      ]
    },
    "EnvConfig": {
      "properties": {
        "GOROOT": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOROOT",
              "description": "Go installation root directory"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOPATH": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOPATH",
              "description": "Primary workspace path (may contain multiple paths)"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOMOD": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOMOD",
              "description": "Path to current go.mod file"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOMODCACHE": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOMODCACHE",
              "description": "Module download/cache directory"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOSUMDB": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOSUMDB",
              "description": "Checksum database URL(s)"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOPROXY": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOPROXY",
              "description": "Module proxy list"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOPRIVATE": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOPRIVATE",
              "description": "Patterns for private modules (comma separated)"
            },
            {
              "type": "null"
            }
          ]
        },
        "GONOPROXY": {
          "oneOf": [
            {
              "type": "string",
              "title": "GONOPROXY",
              "description": "Patterns to bypass proxy"
            },
            {
              "type": "null"
            }
          ]
        },
        "GONOSUMDB": {
          "oneOf": [
            {
              "type": "string",
              "title": "GONOSUMDB",
              "description": "Patterns to bypass checksum database"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOOS": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOOS",
              "description": "Target operating system"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOARCH": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOARCH",
              "description": "Target architecture"
            },
            {
              "type": "null"
            }
          ]
        },
        "GO386": {
          "oneOf": [
            {
              "type": "string",
              "title": "GO386",
              "description": "386 architecture features (e.g. sse2)"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOAMD64": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOAMD64",
              "description": "AMD64 microarchitecture level (v1-v4)"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOARM": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOARM",
              "description": "ARM architecture version (5"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOARM64": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOARM64",
              "description": "ARM64 architecture tuning flags"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOMIPS": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOMIPS",
              "description": "MIPS architecture settings (hardfloat|softfloat)"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOMIPS64": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOMIPS64",
              "description": "MIPS64 architecture settings (hardfloat|softfloat)"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOPPC64": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOPPC64",
              "description": "PPC64 architecture level (power8 etc)"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOWASM": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOWASM",
              "description": "WebAssembly feature flags"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOGCFLAGS": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOGCFLAGS",
              "description": "Extra gc compiler flags"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOASMFLAGS": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOASMFLAGS",
              "description": "Extra assembler flags"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOLDFLAGS": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOLDFLAGS",
              "description": "Extra linker flags"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOFLAGS": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOFLAGS",
              "description": "Default go command flags"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOINSECURE": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOINSECURE",
              "description": "Allow insecure (non-HTTPS) module paths patterns"
            },
            {
              "type": "null"
            }
          ]
        },
        "CGO_ENABLED": {
          "oneOf": [
            {
              "type": "string",
              "title": "CGO_ENABLED",
              "description": "Enable CGO (0 or 1)"
            },
            {
              "type": "null"
            }
          ]
        },
        "CGO_CFLAGS": {
          "oneOf": [
            {
              "type": "string",
              "title": "CGO_CFLAGS",
              "description": "CGO C compiler flags"
            },
            {
              "type": "null"
            }
          ]
        },
        "CGO_CPPFLAGS": {
          "oneOf": [
            {
              "type": "string",
              "title": "CGO_CPPFLAGS",
              "description": "CGO C preprocessor flags"
            },
            {
              "type": "null"
            }
          ]
        },
        "CGO_LDFLAGS": {
          "oneOf": [
            {
              "type": "string",
              "title": "CGO_LDFLAGS",
              "description": "CGO linker flags"
            },
            {
              "type": "null"
            }
          ]
        },
        "CGO_CXXFLAGS": {
          "oneOf": [
            {
              "type": "string",
              "title": "CGO_CXXFLAGS",
              "description": "CGO C++ compiler flags"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOTRACE": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOTRACE",
              "description": "Execution trace output path"
            },
            {
              "type": "null"
            }
          ]
        },
        "GODEBUG": {
          "oneOf": [
            {
              "type": "string",
              "title": "GODEBUG",
              "description": "Runtime debug settings"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOMEMPROFILE": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOMEMPROFILE",
              "description": "Memory profile output path"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOCPUPROFILE": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOCPUPROFILE",
              "description": "CPU profile output path"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOBLOCKPROFILE": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOBLOCKPROFILE",
              "description": "Blocking profile output path"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOMUTEXPROFILE": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOMUTEXPROFILE",
              "description": "Mutex profile output path"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOTOOLCHAIN": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOTOOLCHAIN",
              "description": "Go toolchain selection (auto|go1.x|path)"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOTOOLDIR": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOTOOLDIR",
              "description": "Go toolchain binaries directory"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOCACHE": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOCACHE",
              "description": "Build cache directory"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOTMPDIR": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOTMPDIR",
              "description": "Temporary directory for go commands"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOWORK": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOWORK",
              "description": "Go workspace file mode (auto|off|path)"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOWORKSUM": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOWORKSUM",
              "description": "Workspace checksum file path"
            },
            {
              "type": "null"
            }
          ]
        },
        "GOEXPERIMENT": {
          "oneOf": [
            {
              "type": "string",
              "title": "GOEXPERIMENT",
              "description": "Comma separated experimental feature flags"
            },
            {
              "type": "null"
            }
          ]
        },
        "Custom": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "title": "Custom",
          "description": "Additional custom environment variables (free-form key/values)"
        }
      },
      "type": "object"
    },
    "GoFileTemplate": {
      "properties": {
        "Path": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Language": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoInitOptions": {
      "properties": {
        "Templates": {
          "additionalProperties": {
            "$ref": "#/$defs/GoFileTemplate"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HotloadConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enable hot file watching"
        },
        "dir": {
          "type": "string",
          "title": "Dir",
          "description": "Root directory to watch"
        },
        "filter": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "title": "Filter",
          "description": "Glob patterns to include for watching"
        },
        "recursive": {
          "type": "boolean",
          "title": "Recursive",
          "description": "Watch directories recursively"
        },
        "debounce": {
          "type": "integer",
          "minimum": 0,
          "title": "Debounce",
          "description": "Event debounce time in milliseconds"
        },
        "ignore_patterns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "title": "IgnorePatterns",
          "description": "Glob patterns to ignore"
        },
        "git_ignore": {
          "type": "boolean",
          "title": "GitIgnore",
          "description": "Honor .gitignore exclusions"
        }
      },
      "type": "object"
    },
    "InitOptions": {
      "properties": {
        "Go": {
          "$ref": "#/$defs/GoInitOptions"
        },
        "git_init": {
          "type": "boolean",
          "title": "GitInit",
          "description": "Run 'git init' automatically"
        },
        "license": {
          "oneOf": [
            {
              "type": "string",
              "title": "License",
              "description": "SPDX license identifier (e.g. MIT"
            },
            {
              "type": "null"
            }
          ]
        },
        "dir": {
          "oneOf": [
            {
              "type": "string",
              "title": "Dir",
              "description": "Target directory to initialize project in (relative or absolute)"
            },
            {
              "type": "null"
            }
          ]
        },
        "gocli": {
          "type": "boolean",
          "title": "GoCLIInit",
          "description": "Create gocli configuration file"
        },
        "goreleaser": {
          "type": "boolean",
          "title": "GoreleaserInit",
          "description": "Generate goreleaser config"
        },
        "go_task": {
          "type": "boolean",
          "title": "GoTaskInit",
          "description": "Generate go-task Taskfile"
        },
        "docker": {
          "type": "boolean",
          "title": "DockerInit",
          "description": "Generate Docker related files"
        },
        "makefile": {
          "type": "boolean",
          "title": "MakefileInit",
          "description": "Generate Makefile"
        },
        "author": {
          "oneOf": [
            {
              "type": "string",
              "title": "Author",
              "description": "Project author name"
            },
            {
              "type": "null"
            }
          ]
        },
        "email": {
          "oneOf": [
            {
              "type": "string",
              "format": "email",
              "title": "Email",
              "description": "Project author email"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "type": "object"
    },
    "LogConfig": {
      "properties": {
        "level": {
          "type": "string",
          "enum": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal",
            "panic"
          ],
          "title": "Level",
          "description": "Log level: trace|debug|info|warn|error|fatal|panic"
        },
        "json": {
          "type": "boolean",
          "title": "JSON",
          "description": "Output logs in JSON format"
        },
        "mode": {
          "type": "string",
          "enum": [
            "console",
            "file",
            "both"
          ],
          "title": "Mode",
          "description": "Log output mode: console|file|both"
        },
        "file_path": {
          "oneOf": [
            {
              "type": "string",
              "title": "FilePath",
              "description": "Log file path when mode includes file"
            },
            {
              "type": "null"
            }
          ]
        },
        "max_size": {
          "type": "integer",
          "minimum": 1,
          "title": "MaxSize",
          "description": "Maximum log file size in MB before rotation"
        },
        "max_backups": {
          "type": "integer",
          "minimum": 0,
          "title": "MaxBackups",
          "description": "Number of rotated log files to retain"
        },
        "max_age": {
          "type": "integer",
          "minimum": 0,
          "title": "MaxAge",
          "description": "Maximum age in days to retain old log files"
        }
      },
      "type": "object"
    },
    "Options": {
      "properties": {
        "output": {
          "oneOf": [
            {
              "type": "string",
              "title": "Output",
              "description": "Output path (file or directory); empty for stdout"
            },
            {
              "type": "null"
            }
          ]
        },
        "style": {
          "type": "string",
          "enum": [
            "markdown",
            "html",
            "plain",
            "json",
            "yaml"
          ],
          "title": "Style",
          "description": "Render style: markdown|html|plain|json|yaml"
        },
        "mode": {
          "type": "string",
          "enum": [
            "godoc",
            "markdown"
          ],
          "title": "Mode",
          "description": "Document mode: godoc|markdown"
        },
        "include_private": {
          "type": "boolean",
          "title": "IncludePrivate",
          "description": "Include non-exported symbols"
        },
        "include_tests": {
          "type": "boolean",
          "title": "IncludeTests",
          "description": "Include *_test.go files"
        },
        "include_examples": {
          "type": "boolean",
          "title": "IncludeExamples",
          "description": "Include code examples (auto-enabled with tests)"
        },
        "toc": {
          "type": "boolean",
          "title": "TOC",
          "description": "Generate table of contents"
        },
        "verbose": {
          "type": "boolean",
          "title": "Verbose",
          "description": "Enable verbose logging"
        },
        "theme": {
          "oneOf": [
            {
              "type": "string",
              "title": "Theme",
              "description": "Render theme name (implementation specific)"
            },
            {
              "type": "null"
            }
          ]
        },
        "width": {
          "type": "integer",
          "minimum": 0,
          "title": "Width",
          "description": "Render width (0=auto)"
        },
        "detailed": {
          "type": "boolean",
          "title": "Detailed",
          "description": "Produce more detailed output (godoc mode only)"
        }
      },
      "type": "object"
    },
    "PluginConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enable or disable the plugin system"
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Directory where plugins are stored"
        }
      },
      "type": "object"
    },
    "Tool": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "go",
            "clone",
            "git"
          ],
          "title": "Type",
          "description": "Tool install type: go|clone|git"
        },
        "cmd": {
          "type": "string",
          "title": "Cmd",
          "description": "Legacy install command string (go install ...)"
        },
        "module": {
          "oneOf": [
            {
              "type": "string",
              "title": "Module",
              "description": "Go module path with optional @version (preferred over cmd)"
            },
            {
              "type": "null"
            }
          ]
        },
        "clone": {
          "oneOf": [
            {
              "type": "string",
              "title": "CloneURL",
              "description": "Repository URL (optionally with #ref)"
            },
            {
              "type": "null"
            }
          ]
        },
        "build": {
          "oneOf": [
            {
              "type": "string",
              "title": "Build",
              "description": "Build method for clone/git tool: make|goreleaser"
            },
            {
              "type": "null"
            }
          ]
        },
        "make_target": {
          "oneOf": [
            {
              "type": "string",
              "title": "MakeTarget",
              "description": "Make target name (empty for default)"
            },
            {
              "type": "null"
            }
          ]
        },
        "workdir": {
          "oneOf": [
            {
              "type": "string",
              "title": "WorkDir",
              "description": "Sub directory inside repository to run build"
            },
            {
              "type": "null"
            }
          ]
        },
        "bin": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "BinDirs",
              "description": "Relative directories where build artifacts are produced"
            },
            {
              "type": "null"
            }
          ]
        },
        "env": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Env",
              "description": "Extra build environment variables KEY=VALUE"
            },
            {
              "type": "null"
            }
          ]
        },
        "goreleaser_config": {
          "oneOf": [
            {
              "type": "string",
              "title": "GoreleaserConfig",
              "description": "Path to goreleaser config file"
            },
            {
              "type": "null"
            }
          ]
        },
        "binary_name": {
          "oneOf": [
            {
              "type": "string",
              "title": "BinaryName",
              "description": "Override output binary name"
            },
            {
              "type": "null"
            }
          ]
        },
        "recurse_submodules": {
          "type": "boolean",
          "title": "RecurseSubmodules",
          "description": "Clone git submodules recursively"
        },
        "release_build": {
          "type": "boolean",
          "title": "ReleaseBuild",
          "description": "Enable release build mode (may enable optimizations)"
        },
        "debug_build": {
          "type": "boolean",
          "title": "DebugBuild",
          "description": "Enable debug build mode (extra symbols"
        }
      },
      "type": "object"
    },
    "ToolsConfig": {
      "properties": {
        "deps": {
          "items": {
            "$ref": "#/$defs/Tool"
          },
          "type": "array",
          "title": "Deps",
          "description": "Project local dependency tools list"
        },
        "global": {
          "items": {
            "$ref": "#/$defs/Tool"
          },
          "type": "array",
          "title": "Global",
          "description": "Global (user-wide) tools list"
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Root directory storing installed tools (may include env vars)"
        }
      },
      "type": "object"
    }
  }
}
